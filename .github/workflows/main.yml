name: Electron builder - release

on: 
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  release:
    runs-on:  ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        node-version: [22.x]
        python-version: ['3.10']

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version:  ${{ matrix.node-version }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Windows SDK and Build Tools
        if: runner.os == 'Windows'
        run: |
          choco install windows-sdk-10-version-2004-all
          choco install visualstudio2019-workload-vctools

      - name: Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: |
          pnpm config set msvs_version 2019
          pnpm config set python ${{ env.pythonLocation }}\python.exe
          pnpm install

      - name: Build/release Electron app
        uses: paneron/action-electron-builder@v1.8.1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
